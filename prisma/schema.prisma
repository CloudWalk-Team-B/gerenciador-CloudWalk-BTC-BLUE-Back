generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(uuid())
  name       String
  email      String       @unique
  password   String
  cpf        String       @unique
  isAdmin    Boolean      @default(false) @map("is_admin")
  isManager  Boolean      @default(false) @map("is_manager")
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  isAuth     Boolean      @default(false) @map("is_auth")
  auth       AuthUser[]
  cart       Cart[]
  updateMany UpdateMany[]

  @@map("user")
}

model Product {
  id          String   @id @default(uuid())
  code        Int      @unique
  name        String
  image       String
  description String
  category    String
  price       Float
  inventory   Boolean
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  cart        Cart[]

  @@map("product")
}

model Cart {
  id        String  @id @default(uuid())
  userId    String  @map("user_id")
  productId String  @map("product_id")
  product   Product @relation(fields: [productId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@map("cart")
}

model UpdateMany {
  id          String @id @default(uuid())
  userId      String @map("user_id")
  createdAt   String
  priceAtt    Json[]
  priceOld    Json[]
  productName Json[]
  user        User   @relation(fields: [userId], references: [id])
}

model AuthUser {
  id        String   @id @default(uuid())
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  code      String
  user      User     @relation(fields: [userId], references: [id])
}
